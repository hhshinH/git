//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserInformation_Project.UIP.WS {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS.WSSoap")]
    public interface WSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet KidRetrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> KidRetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidRetrieveInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet KidRetrieveInfo(string kid_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidRetrieveInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> KidRetrieveInfoAsync(string kid_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void KidDelete(string kid_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidDelete", ReplyAction="*")]
        System.Threading.Tasks.Task KidDeleteAsync(string kid_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void KidInsert(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KidInsert", ReplyAction="*")]
        System.Threading.Tasks.Task KidInsertAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TeachRetrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TeachRetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachRetrieveInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TeachRetrieveInfo(string teach_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachRetrieveInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TeachRetrieveInfoAsync(string teach_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TeachDelete(string teach_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachDelete", ReplyAction="*")]
        System.Threading.Tasks.Task TeachDeleteAsync(string teach_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TeachInsert(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachInsert", ReplyAction="*")]
        System.Threading.Tasks.Task TeachInsertAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ClassRetrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClassRetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ClassDelete(string cls_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassDelete", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClassDeleteAsync(string cls_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ClassInsert(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassInsert", ReplyAction="*")]
        System.Threading.Tasks.Task ClassInsertAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassRetrieveName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ClassRetrieveName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassRetrieveName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClassRetrieveNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassKidRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ClassKidRetrieve(string cls_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClassKidRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClassKidRetrieveAsync(string cls_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachGirdRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TeachGirdRetrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TeachGirdRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TeachGirdRetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AttendanceRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AttendanceRetrieve(string dt_stat, string dt_end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AttendanceRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AttendanceRetrieveAsync(string dt_stat, string dt_end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AttendanceInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AttendanceInsert(string kid_key, string date, string inout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AttendanceInsert", ReplyAction="*")]
        System.Threading.Tasks.Task AttendanceInsertAsync(string kid_key, string date, string inout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleRetrieve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DropscheduleRetrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleRetrieve", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DropscheduleRetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DropscheduleDelete(string drog_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleDelete", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> DropscheduleDeleteAsync(string drog_key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DropscheduleInsert(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DropscheduleInsert", ReplyAction="*")]
        System.Threading.Tasks.Task DropscheduleInsertAsync(System.Data.DataSet ds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSSoapChannel : UserInformation_Project.UIP.WS.WSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSSoapClient : System.ServiceModel.ClientBase<UserInformation_Project.UIP.WS.WSSoap>, UserInformation_Project.UIP.WS.WSSoap {
        
        public WSSoapClient() {
        }
        
        public WSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet KidRetrieve() {
            return base.Channel.KidRetrieve();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> KidRetrieveAsync() {
            return base.Channel.KidRetrieveAsync();
        }
        
        public System.Data.DataSet KidRetrieveInfo(string kid_key) {
            return base.Channel.KidRetrieveInfo(kid_key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> KidRetrieveInfoAsync(string kid_key) {
            return base.Channel.KidRetrieveInfoAsync(kid_key);
        }
        
        public void KidDelete(string kid_key) {
            base.Channel.KidDelete(kid_key);
        }
        
        public System.Threading.Tasks.Task KidDeleteAsync(string kid_key) {
            return base.Channel.KidDeleteAsync(kid_key);
        }
        
        public void KidInsert(System.Data.DataSet ds) {
            base.Channel.KidInsert(ds);
        }
        
        public System.Threading.Tasks.Task KidInsertAsync(System.Data.DataSet ds) {
            return base.Channel.KidInsertAsync(ds);
        }
        
        public System.Data.DataSet TeachRetrieve() {
            return base.Channel.TeachRetrieve();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TeachRetrieveAsync() {
            return base.Channel.TeachRetrieveAsync();
        }
        
        public System.Data.DataSet TeachRetrieveInfo(string teach_key) {
            return base.Channel.TeachRetrieveInfo(teach_key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TeachRetrieveInfoAsync(string teach_key) {
            return base.Channel.TeachRetrieveInfoAsync(teach_key);
        }
        
        public void TeachDelete(string teach_key) {
            base.Channel.TeachDelete(teach_key);
        }
        
        public System.Threading.Tasks.Task TeachDeleteAsync(string teach_key) {
            return base.Channel.TeachDeleteAsync(teach_key);
        }
        
        public void TeachInsert(System.Data.DataSet ds) {
            base.Channel.TeachInsert(ds);
        }
        
        public System.Threading.Tasks.Task TeachInsertAsync(System.Data.DataSet ds) {
            return base.Channel.TeachInsertAsync(ds);
        }
        
        public System.Data.DataSet ClassRetrieve() {
            return base.Channel.ClassRetrieve();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClassRetrieveAsync() {
            return base.Channel.ClassRetrieveAsync();
        }
        
        public System.Data.DataSet ClassDelete(string cls_key) {
            return base.Channel.ClassDelete(cls_key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClassDeleteAsync(string cls_key) {
            return base.Channel.ClassDeleteAsync(cls_key);
        }
        
        public void ClassInsert(System.Data.DataSet ds) {
            base.Channel.ClassInsert(ds);
        }
        
        public System.Threading.Tasks.Task ClassInsertAsync(System.Data.DataSet ds) {
            return base.Channel.ClassInsertAsync(ds);
        }
        
        public System.Data.DataSet ClassRetrieveName() {
            return base.Channel.ClassRetrieveName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClassRetrieveNameAsync() {
            return base.Channel.ClassRetrieveNameAsync();
        }
        
        public System.Data.DataSet ClassKidRetrieve(string cls_key) {
            return base.Channel.ClassKidRetrieve(cls_key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClassKidRetrieveAsync(string cls_key) {
            return base.Channel.ClassKidRetrieveAsync(cls_key);
        }
        
        public System.Data.DataSet TeachGirdRetrieve() {
            return base.Channel.TeachGirdRetrieve();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TeachGirdRetrieveAsync() {
            return base.Channel.TeachGirdRetrieveAsync();
        }
        
        public System.Data.DataSet AttendanceRetrieve(string dt_stat, string dt_end) {
            return base.Channel.AttendanceRetrieve(dt_stat, dt_end);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AttendanceRetrieveAsync(string dt_stat, string dt_end) {
            return base.Channel.AttendanceRetrieveAsync(dt_stat, dt_end);
        }
        
        public void AttendanceInsert(string kid_key, string date, string inout) {
            base.Channel.AttendanceInsert(kid_key, date, inout);
        }
        
        public System.Threading.Tasks.Task AttendanceInsertAsync(string kid_key, string date, string inout) {
            return base.Channel.AttendanceInsertAsync(kid_key, date, inout);
        }
        
        public System.Data.DataSet DropscheduleRetrieve() {
            return base.Channel.DropscheduleRetrieve();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DropscheduleRetrieveAsync() {
            return base.Channel.DropscheduleRetrieveAsync();
        }
        
        public System.Data.DataSet DropscheduleDelete(string drog_key) {
            return base.Channel.DropscheduleDelete(drog_key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DropscheduleDeleteAsync(string drog_key) {
            return base.Channel.DropscheduleDeleteAsync(drog_key);
        }
        
        public void DropscheduleInsert(System.Data.DataSet ds) {
            base.Channel.DropscheduleInsert(ds);
        }
        
        public System.Threading.Tasks.Task DropscheduleInsertAsync(System.Data.DataSet ds) {
            return base.Channel.DropscheduleInsertAsync(ds);
        }
    }
}
